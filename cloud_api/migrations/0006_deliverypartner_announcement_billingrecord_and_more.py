# Generated by Django 5.2.7 on 2025-10-22 16:08

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("cloud_api", "0005_payment_user_idx_users_communication_prefs_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeliveryPartner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("partner_name", models.CharField(max_length=255)),
                ("partner_type", models.CharField(max_length=50)),
                ("contact_info", models.JSONField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "delivery_partners",
            },
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField()),
                ("announcement_type", models.CharField(max_length=50)),
                ("target_audience", models.CharField(max_length=100)),
                ("audience_parameters", models.JSONField(blank=True, null=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=True)),
                ("view_count", models.IntegerField(default=0)),
                ("engagement_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "announcements",
            },
        ),
        migrations.CreateModel(
            name="BillingRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subtotal_amount",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("tax_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "service_charge",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("billing_status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.order",
                    ),
                ),
            ],
            options={
                "db_table": "billing_records",
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_type", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=255)),
                ("status", models.CharField(max_length=50)),
                ("priority", models.IntegerField(default=1)),
                ("first_response_time", models.IntegerField(blank=True, null=True)),
                ("resolution_time", models.IntegerField(blank=True, null=True)),
                (
                    "customer_satisfaction_rating",
                    models.IntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="staff_sessions",
                        to="cloud_api.user",
                    ),
                ),
                (
                    "customer_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_sessions",
                        to="cloud_api.user",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "chat_sessions",
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("recipient_entity_type", models.CharField(max_length=50)),
                ("recipient_entity_id", models.UUIDField()),
                ("message_content", models.TextField()),
                ("message_type", models.CharField(max_length=50)),
                ("priority", models.IntegerField(default=1)),
                ("is_edited", models.BooleanField(default=False)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
                ("read_receipts", models.JSONField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                (
                    "sentiment_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("like_count", models.IntegerField(default=0)),
                ("reply_count", models.IntegerField(default=0)),
                ("share_count", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.chatsession",
                    ),
                ),
            ],
            options={
                "db_table": "chat_messages",
            },
        ),
        migrations.CreateModel(
            name="CommunicationGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("group_type", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "communication_groups",
            },
        ),
        migrations.CreateModel(
            name="ContentMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("media_type", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("media_url", models.CharField(max_length=500)),
                ("target_audience", models.CharField(max_length=100)),
                (
                    "conversion_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "engagement_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "click_through_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "content_media",
            },
        ),
        migrations.CreateModel(
            name="CustomerAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("account_type", models.CharField(max_length=50)),
                ("is_refundable", models.BooleanField(default=True)),
                ("crypto_details", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
            ],
            options={
                "db_table": "customer_accounts",
            },
        ),
        migrations.CreateModel(
            name="CustomerLoyalty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("loyalty_tier", models.CharField(max_length=50)),
                ("points_balance", models.IntegerField(default=0)),
                (
                    "lifetime_spend",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("total_orders", models.IntegerField(default=0)),
                ("visit_count", models.IntegerField(default=0)),
                ("first_visit_date", models.DateField(blank=True, null=True)),
                ("last_visit_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "customer_loyalty",
            },
        ),
        migrations.CreateModel(
            name="DeliveryTracking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("current_location", models.JSONField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("estimated_arrival", models.DateTimeField(blank=True, null=True)),
                ("actual_arrival", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "delivery_partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.deliverypartner",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.order",
                    ),
                ),
            ],
            options={
                "db_table": "delivery_tracking",
            },
        ),
        migrations.CreateModel(
            name="GroupMember",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("member_role", models.CharField(max_length=50)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.communicationgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
            ],
            options={
                "db_table": "group_members",
            },
        ),
        migrations.CreateModel(
            name="LoyaltyReward",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("reward_name", models.CharField(max_length=255)),
                ("reward_type", models.CharField(max_length=50)),
                ("points_required", models.IntegerField()),
                (
                    "discount_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "min_tier_required",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "free_menu_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cloud_api.menuitem",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "loyalty_rewards",
            },
        ),
        migrations.CreateModel(
            name="MediaPerformanceDaily",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("performance_date", models.DateField()),
                ("view_count", models.IntegerField(default=0)),
                ("engagement_count", models.IntegerField(default=0)),
                ("conversion_count", models.IntegerField(default=0)),
                ("click_count", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.contentmedia",
                    ),
                ),
            ],
            options={
                "db_table": "media_performance_daily",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("source_entity_id", models.UUIDField()),
                ("source_entity_type", models.CharField(max_length=50)),
                ("notification_type", models.CharField(max_length=50)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("action_url", models.CharField(blank=True, max_length=500, null=True)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
            },
        ),
        migrations.CreateModel(
            name="OrderItemRejection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rejected_quantity",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                ("rejection_reason", models.TextField()),
                (
                    "rejection_proof_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("digital_signature", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "order_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.orderitem",
                    ),
                ),
            ],
            options={
                "db_table": "order_item_rejections",
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("method_type", models.CharField(max_length=50)),
                ("provider", models.CharField(max_length=100)),
                (
                    "last_four_digits",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
            ],
            options={
                "db_table": "payment_methods",
            },
        ),
        migrations.CreateModel(
            name="RestaurantDailySummary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("summary_date", models.DateField()),
                ("total_orders", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "average_order_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("customer_count", models.IntegerField(default=0)),
                ("peak_hour", models.TimeField(blank=True, null=True)),
                (
                    "customer_satisfaction_score",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "most_popular_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cloud_api.menuitem",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "restaurant_daily_summary",
            },
        ),
        migrations.CreateModel(
            name="RestaurantStaff",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("employee_id", models.CharField(max_length=50, unique=True)),
                ("hire_date", models.DateField()),
                ("termination_date", models.DateField(blank=True, null=True)),
                (
                    "salary",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "efficiency_score",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("total_orders_served", models.IntegerField(default=0)),
                ("average_order_time", models.IntegerField(blank=True, null=True)),
                (
                    "customer_rating_avg",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("current_status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "managed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cloud_api.restaurantstaff",
                    ),
                ),
                (
                    "user_role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.userrole",
                    ),
                ),
            ],
            options={
                "db_table": "restaurant_staff",
            },
        ),
        migrations.CreateModel(
            name="RewardRedemption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("points_used", models.IntegerField()),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("redemption_status", models.CharField(max_length=50)),
                ("redemption_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "applied_by_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cloud_api.user"
                    ),
                ),
                (
                    "loyalty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.customerloyalty",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.order",
                    ),
                ),
                (
                    "reward",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.loyaltyreward",
                    ),
                ),
            ],
            options={
                "db_table": "reward_redemptions",
            },
        ),
        migrations.CreateModel(
            name="StaffPerformanceHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("metric_type", models.CharField(max_length=100)),
                ("metric_value", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("measured_at", models.DateTimeField()),
                ("period_type", models.CharField(max_length=50)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurantstaff",
                    ),
                ),
            ],
            options={
                "db_table": "staff_performance_history",
            },
        ),
        migrations.CreateModel(
            name="StaffShift",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("shift_name", models.CharField(max_length=100)),
                ("shift_type", models.CharField(max_length=50)),
                ("shift_start", models.TimeField()),
                ("shift_end", models.TimeField()),
                ("max_staff_count", models.IntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "staff_shifts",
            },
        ),
        migrations.CreateModel(
            name="StaffShiftAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("assignment_date", models.DateField()),
                ("actual_start_time", models.DateTimeField(blank=True, null=True)),
                ("actual_end_time", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.staffshift",
                    ),
                ),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurantstaff",
                    ),
                ),
            ],
            options={
                "db_table": "staff_shift_assignments",
            },
        ),
        migrations.CreateModel(
            name="SupplyOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("expected_delivery_date", models.DateField()),
                ("delivery_status", models.CharField(max_length=50)),
                ("invoice_total", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "adjusted_total",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "quality_rating",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "on_time_rating",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "rejection_proof_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.order",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.supplier",
                    ),
                ),
            ],
            options={
                "db_table": "supply_orders",
            },
        ),
        migrations.CreateModel(
            name="TableAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("assignment_start", models.DateTimeField()),
                ("assignment_end", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "shift_assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.staffshiftassignment",
                    ),
                ),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurantstaff",
                    ),
                ),
                (
                    "table",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restauranttable",
                    ),
                ),
            ],
            options={
                "db_table": "table_assignments",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("source_entity_id", models.UUIDField()),
                ("source_entity_type", models.CharField(max_length=50)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("transaction_type", models.CharField(max_length=50)),
                ("category", models.CharField(max_length=100)),
                (
                    "gateway_transaction_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("status", models.CharField(max_length=50)),
                ("transaction_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cloud_api.paymentmethod",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cloud_api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "transactions",
            },
        ),
    ]
